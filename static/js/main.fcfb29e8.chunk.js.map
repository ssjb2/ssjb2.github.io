{"version":3,"sources":["actions/types.js","actions/groupActions.js","components/Group/GroupItem.js","components/Group/CreateGroupButton.js","components/Dashboard.js","securityUtils/setJWTToken.js","actions/securityActions.js","components/Layout/Header.js","components/Group/AddGroup.js","reducers/errorReducer.js","reducers/groupReducer.js","reducers/securityReducer.js","reducers/backlogReducer.js","reducers/profilReducer.js","reducers/friendsReducer.js","reducers/index.js","store.js","components/Group/UpdateGroup.js","components/UserManagement/Register.js","components/UserManagement/Login.js","securityUtils/SecureRoute.js","components/Layout/Landing.js","components/GroupBoard/GroupPost/AddGroupPost.js","actions/backlogActions.js","components/GroupBoard/GroupPost/Comment/CommentItem.js","components/GroupBoard/GroupPost/Comment/Comment.js","components/GroupBoard/GroupPost/GroupPost.js","components/GroupBoard/Backlog.js","components/GroupBoard/GroupBoard.js","components/GroupBoard/GroupPost/UpdateGroupPost.js","components/GroupBoard/GroupPost/Comment/AddComment.js","actions/profileActions.js","actions/friendsActions.js","components/Profil/profil.js","components/Profil/updateProfil.js","components/Friends/FriendItem.js","components/Friends/RecInvItem.js","components/Friends/SentInvItem.js","components/Friends/Friends.js","App.js","serviceWorker.js","index.js"],"names":["GET_ERRORS","createGroup","group","history","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","dispatch","wrap","_context","prev","next","axios","post","push","type","payload","t0","response","data","stop","_x","apply","this","arguments","GroupItem","onDeleteClick","id","_this","props","deleteGroup","onJoinClick","joinGroup","window","location","reload","x","console","log","usersInGroup","countUsers","react_default","createElement","className","onClick","bind","groupIdentifier","prop","security","user","username","groupName","description","react_router_dom","to","concat","userInGroup","Component","connect","state","_ref4","_callee4","_context4","confirm","delete","_x4","_ref5","_callee5","_context5","sent","_x5","CreateGroupButton","Fragment","Dashboard","getGroups","groups","Group_CreateGroupButton","map","Group_GroupItem","key","_ref2","_callee2","res","_context2","get","_x2","setJWTToken","token","defaults","headers","common","logout","localStorage","removeItem","Header","href","headerLinks","_this$props$security","validToken","userIsAuthenticated","userIsNotAuthenticated","data-toggle","data-target","AddGroup","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","errors","onChange","assertThisInitialized","onSubmit","nextProps","setState","e","defineProperty","target","name","value","preventDefault","newGroup","classnames","is-invalid","placeholder","initialState","group_posts","group_post","comments","comment","profil","friends","friend","sentInvs","sentInv","recInvs","recInv","combineReducers","length","undefined","action","objectSpread","filter","backlog","middleware","thunk","store","navigator","userAgent","includes","createStore","rootReducer","compose","applyMiddleware","__REDUX_DEVTOOLS_EXTENSION__","UpdateGroup","_nextProps$group","match","params","getGroup","updateGroup","disabled","_ref3","_callee3","_context3","_x3","Register","password","confirmPassword","newUser","createNewUser","Login","LoginRequest","login","decoded","setItem","jwt_decode","component","otherProps","objectWithoutProperties","react_router","assign","render","Landing","AddGroupPost","title","body","acceptanceCriteria","status","dueDate","newPost","addGroupPost","backlog_id","CommentItem","author","created_At","Comment","errro","gp_id","getComments","_this2","comments2","goBack","Comment_CommentItem","post_id","GroupPost","groupSequence","editPost","Backlog","group_posts_prop","posts","GroupBoard_GroupPost_GroupPost","todoItems","inProgressItems","doneItems","i","GroupBoard","getBacklog","BoardContent","groupNotFound","role","GroupBoard_Backlog","boardAlgorithm","UpdateGroupPost","create_At","_this$props$match$par","getGroupPost","_nextProps$group_post","create_A","updateGroupPost","patch","AddComment","newComment","addComment","_ref6","_callee6","_context6","_x6","getProfile","getFriends","getSentInv","getRecInv","inviteFriend","acceptFriend","declineFriend","Profil","onSendInv","src","logo","editProfilButton","about","hobbies","games","age","UpdateProfil","_nextProps$profil$pro","updateProfil","updateProfile","FriendItem","RecInvItem","onAcceptClick","SentInvItem","Friends","milliseconds","start","Date","getTime","Friends_FriendItem","Friends_SentInvItem","Friends_RecInvItem","checkFriends","checkRecInv","checkSentInv","jwtToken","decoded_jwtToken","currentTime","now","exp","App","es","Layout_Header","exact","path","SecureRoute","Boolean","hostname","ReactDOM","src_App_0","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fcfb29e8.chunk.js","sourcesContent":["export const GET_ERRORS = \"GET_ERRORS\";\nexport const GET_GROUPS = \"GET_GROUPS\";\nexport const GET_GROUP = \"GET_GROUP\";\nexport const DELETE_GROUP = \"DELETE_GROUP\";\n\nexport const GET_BACKLOG = \"GET_BACKLOG\";\nexport const GET_GROUP_POST = \"GET_GROUP_POST\";\nexport const DELETE_GROUP_POST = \"DELETE_GROUP_POST\";\n\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\n\nexport const GET_COMMENTS = \"GET_COMMENTS\";\n\nexport const GET_PROFILE = \"GET_PROFILE\";\n\nexport const GET_FRIENDS = \"GET_FRIENDS\"\nexport const GET_SENT_INV= \"GET_SENT_INV\"\nexport const GET_REC_INV=\"GET_REC_INV\"","import axios from \"axios\";\nimport {\n  GET_ERRORS,\n  GET_GROUPS,\n  GET_GROUP,\n  DELETE_GROUP\n} from \"../actions/types\";\n\nexport const createGroup = (group, history) => async dispatch => {\n  try {\n    await axios.post(\"/api/groups\", group);\n    history.push(\"/dashboard\");\n    dispatch({\n      type: GET_ERRORS,\n      payload: {}\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\n\nexport const getGroups = () => async dispatch => {\n  const res = await axios.get(\"/api/groups/all\");\n  dispatch({\n    type: GET_GROUPS,\n    payload: res.data\n  });\n};\n\nexport const getGroup = (id, history) => async dispatch => {\n  try {\n    const res = await axios.get(`/api/groups/${id}`);\n    dispatch({\n      type: GET_GROUP,\n      payload: res.data\n    });\n  } catch (error) {\n    history.push(\"/dashboard\");\n  }\n};\n\nexport const deleteGroup = id => async dispatch => {\n  if (\n    window.confirm(\n      \"Are you sure you want delete group and all the data related to it?\"\n    )\n  )\n    await axios.delete(`/api/groups/${id}`);\n  dispatch({\n    type: DELETE_GROUP,\n    payload: id\n  });\n};\n\nexport const joinGroup = id => async dispatch => {\n  try {\n    const res = await axios.post(`/api/groups/join/${id}`);\n    dispatch({\n      type: GET_ERRORS,\n      payload: {}\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { deleteGroup, joinGroup } from \"../../actions/groupActions\";\nclass GroupItem extends Component {\n  onDeleteClick = id => {\n    this.props.deleteGroup(id);\n  };\n  onJoinClick = id => {\n    this.props.joinGroup(id);\n    window.location.reload();\n  };\n\n  userInGroup() {\n    let x = 0;\n    const { group } = this.props;\n    console.log(group);\n    console.log(group.usersInGroup);\n    if (group.countUsers === 0) {\n      return (\n        <li\n          className=\"list-group-item join\"\n          onClick={this.onJoinClick.bind(this, group.groupIdentifier)}\n        >\n          <i className=\"fa fa-plus pr-1\"> Join group</i>\n        </li>\n      );\n    }\n    for (const prop in group.usersInGroup) {\n      console.log(this.props.security.user.username + \"js\");\n      console.log(group.usersInGroup);\n      console.log(group.countUsers + \"sd\");\n      console.log(group);\n      if (\n        group.usersInGroup[prop].username === this.props.security.user.username\n      )\n        x = 1;\n    }\n    if (x === 0) {\n      return (\n        <li\n          className=\"list-group-item join\"\n          onClick={this.onJoinClick.bind(this, group.groupIdentifier)}\n        >\n          <i className=\"fa fa-plus pr-1\"> Join group</i>\n        </li>\n      );\n    } else {\n      return (\n        <li className=\"list-group-item bg-light\">\n          <i className=\"fas fa-user-check text-info\"> You are a member</i>\n        </li>\n      );\n    }\n  }\n  render() {\n    const { group } = this.props;\n    return (\n      <div className=\"container\">\n        <div className=\"card card-body bg-light mb-3\">\n          <div className=\"row\">\n            <div className=\"col-2\">\n              <span className=\"mx-auto\">{group.groupIdentifier}</span>\n            </div>\n            <div className=\"col-lg-6 col-md-4 col-8\">\n              <h3>{group.groupName}</h3>\n              <p>{group.description}</p>\n              <p>Members: {group.countUsers}</p>\n            </div>\n\n            <div className=\"col-md-4 d-none d-lg-block\">\n              <ul className=\"list-group\">\n                <Link to={`/GroupBoard/${group.groupIdentifier}`}>\n                  <li className=\"list-group-item board\">\n                    <i className=\"fa fa-flag-checkered pr-1\"> Group Board </i>\n                  </li>\n                </Link>\n                {/*<Link to={`/updateGroup/${group.groupIdentifier}`}>\n                  <li className=\"list-group-item update\">\n                    <i className=\"fa fa-edit pr-1\"> Update Group Info</i>\n                  </li>\n    </Link>*/}\n                {/* \n                <li\n                  className=\"list-group-item delete\"\n                  onClick={this.onDeleteClick.bind(this, group.groupIdentifier)}\n                >\n                  <i className=\"fa fa-minus-circle pr-1\"> Delete Group</i>\n</li>\n*/}\n\n                <div>{this.userInGroup()}</div>\n              </ul>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nGroupItem.propTypes = {\n  deleteGroup: PropTypes.func.isRequired,\n  security: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  security: state.security\n});\nexport default connect(\n  mapStateToProps,\n  { deleteGroup, joinGroup }\n)(GroupItem);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nconst CreateGroupButton = () => {\n  return (\n    <React.Fragment>\n      <Link to=\"/addGroup\" className=\"btn btn-lg btn-info\">\n        Create a Group\n      </Link>\n    </React.Fragment>\n  );\n};\nexport default CreateGroupButton;\n","import React, { Component } from \"react\";\nimport GroupItem from \"./Group/GroupItem\";\nimport CreateGroupButton from \"./Group/CreateGroupButton\";\nimport { connect } from \"react-redux\";\nimport { getGroups } from \"../actions/groupActions\";\nimport PropTypes from \"prop-types\";\n\nclass Dashboard extends Component {\n  componentDidMount() {\n    this.props.getGroups();\n  }\n\n  render() {\n    const groups = this.props.group.groups;\n    return (\n      <div className=\"projects\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-12\">\n              <h1 className=\"display-4 text-center\">Groups</h1>\n              <br />\n              <CreateGroupButton />\n              <br />\n              <hr />\n            </div>\n            {groups.map(group => (\n              <GroupItem key={group.id} group={group} />\n            ))}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nDashboard.propTypes = {\n  group: PropTypes.object.isRequired,\n  getGroups: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  group: state.group\n});\nexport default connect(\n  mapStateToProps,\n  { getGroups }\n)(Dashboard);\n","import axios from \"axios\";\n\nconst setJWTToken = token => {\n  if (token) {\n    axios.defaults.headers.common[\"Authorization\"] = token;\n  } else {\n    delete axios.defaults.headers.common[\"Authorization\"];\n  }\n};\n\nexport default setJWTToken;\n","import axios from \"axios\";\nimport { GET_ERRORS, SET_CURRENT_USER } from \"./types\";\nimport setJWTToken from \"../securityUtils/setJWTToken\";\nimport jwt_decode from \"jwt-decode\";\n\nexport const createNewUser = (newUser, history) => async dispatch => {\n  try {\n    await axios.post(\"/api/users/register\", newUser);\n    history.push(\"/login\");\n    dispatch({\n      type: GET_ERRORS,\n      payload: {}\n    });\n  } catch (error) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: error.response.data\n    });\n  }\n};\n\nexport const login = LoginRequest => async dispatch => {\n  try {\n    const res = await axios.post(\"/api/users/login\", LoginRequest);\n\n    const { token } = res.data;\n\n    localStorage.setItem(\"jwtToken\", token);\n\n    setJWTToken(token);\n\n    const decoded = jwt_decode(token);\n\n    dispatch({\n      type: SET_CURRENT_USER,\n      payload: decoded\n    });\n  } catch (error) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: error.response.data\n    });\n  }\n};\n\nexport const logout = () => dispatch => {\n  localStorage.removeItem(\"jwtToken\");\n  setJWTToken(false);\n  dispatch({\n    type: SET_CURRENT_USER,\n    payload: {}\n  });\n};\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { logout } from \"../../actions/securityActions\";\n\nclass Header extends Component {\n  logout() {\n    this.props.logout();\n    window.location.href = \"/\";\n  }\n  render() {\n    const { validToken, user } = this.props.security;\n\n    const userIsAuthenticated = (\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\n        <ul className=\"navbar-nav mr-auto\">\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/dashboard\">\n              Groups\n            </Link>\n          </li>\n        </ul>\n        <ul className=\"navbar-nav mr-auto\">\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to={`/profile/${user.username}`}>\n              Profil\n            </Link>\n          </li>\n        </ul>\n        <ul className=\"navbar-nav mr-auto\">\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to={`/friends`}>\n              Friends\n            </Link>\n          </li>\n        </ul>\n        <ul className=\"navbar-nav ml-auto\">\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/dashboard\">\n              <i className=\"fas fa-user-circle mr-1\" />\n              {user.username}\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link\n              className=\"nav-link\"\n              to=\"/logout\"\n              onClick={this.logout.bind(this)}\n            >\n              Logout\n            </Link>\n          </li>\n        </ul>\n      </div>\n    );\n\n    const userIsNotAuthenticated = (\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\n        <ul className=\"navbar-nav ml-auto\">\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/register\">\n              Sign Up\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/login\">\n              Login\n            </Link>\n          </li>\n        </ul>\n      </div>\n    );\n\n    let headerLinks;\n\n    if (validToken && user) {\n      headerLinks = userIsAuthenticated;\n    } else {\n      headerLinks = userIsNotAuthenticated;\n    }\n    return (\n      <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-4\">\n        <div className=\"container\">\n          <Link className=\"navbar-brand\" to=\"/\">\n            GameBook\n          </Link>\n          <button\n            className=\"navbar-toggler\"\n            type=\"button\"\n            data-toggle=\"collapse\"\n            data-target=\"#mobile-nav\"\n          >\n            <span className=\"navbar-toggler-icon\" />\n          </button>\n          {headerLinks}\n        </div>\n      </nav>\n    );\n  }\n}\nHeader.propTypes = {\n  logout: PropTypes.func.isRequired,\n  security: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  security: state.security\n});\nexport default connect(\n  mapStateToProps,\n  { logout }\n)(Header);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { createGroup } from \"../../actions/groupActions\";\nimport classnames from \"classnames\";\nclass AddGroup extends Component {\n  constructor() {\n    super();\n    this.state = {\n      groupName: \"\",\n      groupIdentifier: \"\",\n      description: \"\",\n      errors: {}\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n  //life cycle hooks\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n  onSubmit(e) {\n    e.preventDefault();\n    const newGroup = {\n      groupName: this.state.groupName,\n      groupIdentifier: this.state.groupIdentifier,\n      description: this.state.description\n    };\n    this.props.createGroup(newGroup, this.props.history);\n  }\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className=\"register\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <h5 className=\"display-4 text-center\">Create Group form</h5>\n              <hr />\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg \", {\n                      \"is-invalid\": errors.groupName\n                    })}\n                    placeholder=\"Group Name\"\n                    name=\"groupName\"\n                    value={this.state.groupName}\n                    onChange={this.onChange}\n                  />\n                  {errors.groupName && (\n                    <div className=\"invalid-feedback\">{errors.groupName}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg \", {\n                      \"is-invalid\": errors.groupIdentifier\n                    })}\n                    placeholder=\"Unique Group ID\"\n                    name=\"groupIdentifier\"\n                    value={this.state.groupIdentifier}\n                    onChange={this.onChange}\n                  />\n                  {errors.groupIdentifier && (\n                    <div className=\"invalid-feedback\">\n                      {errors.groupIdentifier}\n                    </div>\n                  )}\n                </div>\n\n                <div className=\"form-group\">\n                  <textarea\n                    className={classnames(\"form-control form-control-lg \", {\n                      \"is-invalid\": errors.description\n                    })}\n                    placeholder=\"Group Description\"\n                    name=\"description\"\n                    value={this.state.description}\n                    onChange={this.onChange}\n                  />\n                  {errors.description && (\n                    <div className=\"invalid-feedback\">{errors.description}</div>\n                  )}\n                </div>\n\n                <input\n                  type=\"submit\"\n                  className=\"btn btn-primary btn-block mt-4\"\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nAddGroup.propTypes = {\n  createGroup: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  errors: state.errors\n});\nexport default connect(\n  mapStateToProps,\n  { createGroup }\n)(AddGroup);\n","import { GET_ERRORS } from \"../actions/types\";\n\nconst initialState = {};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_ERRORS:\n      return action.payload;\n    default:\n      return state;\n  }\n}\n","import { GET_GROUPS, GET_GROUP, DELETE_GROUP } from \"../actions/types\";\n\nconst initialState = {\n  groups: [],\n  group: {}\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_GROUPS:\n      return {\n        ...state,\n        groups: action.payload\n      };\n\n    case GET_GROUP:\n      return {\n        ...state,\n        group: action.payload\n      };\n    case DELETE_GROUP:\n      return {\n        ...state,\n        groups: state.groups.filter(\n          group => group.groupIdentifier !== action.payload\n        ) //filtruje tego co nie ma za pomoca js6 filter\n      };\n\n    default:\n      return state;\n  }\n}\n","import { SET_CURRENT_USER } from \"../actions/types\";\n\nconst initialState = {\n  user: {},\n  validToken: false\n};\n\nconst booleanActionPayload = payload => {\n  if (payload) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_CURRENT_USER:\n      return {\n        ...state,\n        validToken: booleanActionPayload(action.payload),\n        user: action.payload\n      };\n\n    default:\n      return state;\n  }\n}\n","import {\n  GET_BACKLOG,\n  GET_GROUP_POST,\n  DELETE_GROUP_POST,\n  GET_COMMENTS\n} from \"../actions/types\";\n\nconst initialState = {\n  group_posts: [],\n  group_post: {},\n  comments: [],\n  comment: {}\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_BACKLOG:\n      return {\n        ...state,\n        group_posts: action.payload\n      };\n\n    case GET_GROUP_POST:\n      return {\n        ...state,\n        group_post: action.payload\n      };\n\n    case DELETE_GROUP_POST:\n      return {\n        ...state\n\n        // TO_DO\n      };\n\n    case GET_COMMENTS:\n      return {\n        ...state,\n        comments: action.payload,\n        comment: action.payload\n      };\n\n    default:\n      return state;\n  }\n}\n","import { GET_PROFILE } from \"../actions/types\";\n\nconst initialState = {\n  profil: {}\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_PROFILE:\n      return {\n        ...state,\n        profil: action.payload\n      };\n    default:\n      return state;\n  }\n}\n","import { GET_FRIENDS, GET_REC_INV, GET_SENT_INV } from \"../actions/types\";\n\nconst initialState = {\n  friends: [],\n  friend: {},\n  sentInvs: [],\n  sentInv: {},\n  recInvs: [],\n  recInv: {}\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_FRIENDS:\n      return {\n        ...state,\n        friends: action.payload\n      };\n    case GET_REC_INV:\n      return {\n        ...state,\n        recInvs: action.payload\n      };\n    case GET_SENT_INV:\n      return {\n        ...state,\n        sentInvs: action.payload\n      };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport errorReducer from \"./errorReducer\";\nimport groupReducer from \"./groupReducer\";\nimport securityReducer from \"./securityReducer\";\nimport backlogReducer from \"./backlogReducer\";\nimport profilReducer from \"./profilReducer\";\nimport friendsReducer from \"./friendsReducer\";\n\nexport default combineReducers({\n  errors: errorReducer,\n  group: groupReducer,\n  security: securityReducer,\n  backlog: backlogReducer,\n  profil: profilReducer,\n  friends: friendsReducer\n});\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst initialState = {};\nconst middleware = [thunk];\n\nlet store;\n\nif (window.navigator.userAgent.includes(\"Chrome\")) {\n  store = createStore(\n    rootReducer,\n    initialState,\n    compose(\n      applyMiddleware(...middleware),\n      window.__REDUX_DEVTOOLS_EXTENSION__ &&\n        window.__REDUX_DEVTOOLS_EXTENSION__()\n    )\n  );\n} else {\n  store = createStore(\n    rootReducer,\n    initialState,\n    compose(applyMiddleware(...middleware))\n  );\n}\n\nexport default store;\n","import React, { Component } from \"react\";\nimport { getGroup, createGroup } from \"../../actions/groupActions\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\nclass UpdateGroup extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      id: \"\",\n      groupName: \"\",\n      groupIdentifier: \"\",\n      description: \"\",\n      countUsers: \"\",\n      errors: {}\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n  componentWillReceiveProps(nextProps) {\n    const {\n      id,\n      groupName,\n      groupIdentifier,\n      description,\n      countUsers\n    } = nextProps.group;\n\n    this.setState({ id, groupName, groupIdentifier, description, countUsers });\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n  componentDidMount() {\n    const { id } = this.props.match.params;\n    this.props.getGroup(id, this.props.history);\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n  onSubmit(e) {\n    e.preventDefault();\n    const updateGroup = {\n      id: this.state.id,\n      groupName: this.state.groupName,\n      groupIdentifier: this.state.groupIdentifier,\n      description: this.state.description,\n      countUsers: this.state.countUsers\n    };\n\n    this.props.createGroup(updateGroup, this.props.history);\n  }\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className=\"register\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <h5 className=\"display-4 text-center\">Update Group form</h5>\n              <hr />\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg \", {\n                      \"is-invalid\": errors.groupName\n                    })}\n                    placeholder=\"Group Name\"\n                    name=\"groupName\"\n                    value={this.state.groupName}\n                    onChange={this.onChange}\n                  />\n                  {errors.groupName && (\n                    <div className=\"invalid-feedback\">{errors.groupName}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className=\"form-control form-control-lg\"\n                    placeholder=\"Unique Group ID\"\n                    name=\"groupIdentifier\"\n                    disabled\n                    value={this.state.groupIdentifier}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <textarea\n                    className={classnames(\"form-control form-control-lg \", {\n                      \"is-invalid\": errors.description\n                    })}\n                    placeholder=\"Group Description\"\n                    name=\"description\"\n                    value={this.state.description}\n                    onChange={this.onChange}\n                  />\n                  {errors.description && (\n                    <div className=\"invalid-feedback\">{errors.description}</div>\n                  )}\n                </div>\n\n                <input\n                  type=\"submit\"\n                  className=\"btn btn-primary btn-block mt-4\"\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nUpdateGroup.propTypes = {\n  getGroup: PropTypes.func.isRequired,\n  createGroup: PropTypes.func.isRequired,\n  group: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => ({\n  group: state.group.group,\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { getGroup, createGroup }\n)(UpdateGroup);\n","import React, { Component } from \"react\";\nimport { createNewUser } from \"../../actions/securityActions\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\n\nclass Register extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      username: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      errors: {}\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n  componentDidMount() {\n    if (this.props.security.validToken) {\n      this.props.history.push(\"/pharmacy\");\n    }\n  }\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  }\n  onSubmit(e) {\n    e.preventDefault();\n    const newUser = {\n      username: this.state.username,\n      password: this.state.password,\n      confirmPassword: this.state.confirmPassword\n    };\n\n    this.props.createNewUser(newUser, this.props.history);\n  }\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className=\"register\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <h1 className=\"display-4 text-center\">Sign Up</h1>\n              <p className=\"lead text-center\">Create your Account</p>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.username\n                    })}\n                    placeholder=\"Email (Username)\"\n                    name=\"username\"\n                    value={this.state.username}\n                    onChange={this.onChange}\n                  />\n                  {errors.username && (\n                    <div className=\"invalid-feedback\">{errors.username}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"password\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.password\n                    })}\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    value={this.state.password}\n                    onChange={this.onChange}\n                  />\n                  {errors.password && (\n                    <div className=\"invalid-feedback\">{errors.password}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"password\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.confirmPassword\n                    })}\n                    placeholder=\"Confirm Password\"\n                    name=\"confirmPassword\"\n                    value={this.state.confirmPassword}\n                    onChange={this.onChange}\n                  />\n                  {errors.confirmPassword && (\n                    <div className=\"invalid-feedback\">\n                      {errors.confirmPassword}\n                    </div>\n                  )}\n                </div>\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nRegister.propTypes = {\n  createNewUser: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n  security: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => ({\n  errors: state.errors,\n  security: state.security\n});\nexport default connect(\n  mapStateToProps,\n  { createNewUser }\n)(Register);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\nimport { login } from \"../../actions/securityActions\";\n\nclass Login extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      username: \"\",\n      password: \"\",\n      errors: {}\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.props.security.validToken) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.security.validToken) {\n      this.props.history.push(\"/dashboard\");\n    }\n\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const LoginRequest = {\n      username: this.state.username,\n      password: this.state.password\n    };\n    this.props.login(LoginRequest);\n  }\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className=\"login\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <h1 className=\"display-4 text-center\">Log In</h1>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.username\n                    })}\n                    placeholder=\"Email Address\"\n                    name=\"username\"\n                    value={this.state.username}\n                    onChange={this.onChange}\n                  />\n                  {errors.username && (\n                    <div className=\"invalid-feedback\">{errors.username}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"password\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.password\n                    })}\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    value={this.state.password}\n                    onChange={this.onChange}\n                  />\n                  {errors.password && (\n                    <div className=\"invalid-feedback\">{errors.password}</div>\n                  )}\n                </div>\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nLogin.propTypes = {\n  login: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n  security: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  security: state.security,\n  errors: state.errors\n});\nexport default connect(\n  mapStateToProps,\n  { login }\n)(Login);\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nconst SecuredRoute = ({ component: Component, security, ...otherProps }) => (\n  <Route\n    {...otherProps}\n    render={props =>\n      security.validToken === true ? (\n        <Component {...props} />\n      ) : (\n        <Redirect to=\"/login\" />\n      )\n    }\n  />\n);\n\nSecuredRoute.propTypes = {\n  security: PropTypes.object.isRequired\n};\nconst stateMapsToProps = state => ({\n  security: state.security\n});\nexport default connect(stateMapsToProps)(SecuredRoute);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nclass Landing extends Component {\n  componentDidMount() {\n    if (this.props.security.validToken) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n  render() {\n    return (\n      <div className=\"landing\">\n        <div className=\"light-overlay landing-inner text-dark\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-md-12 text-center\">\n                <h1 className=\"display-3 mb-4\">Your service for Gamers</h1>\n                <p className=\"lead\">Create your acount</p>\n                <hr />\n                <Link className=\"btn btn-lg btn-primary mr-2\" to=\"/register\">\n                  Sign up\n                </Link>\n                <Link to=\"/login\" className=\"btn btn-lg btn-secondary mr-2\">\n                  Login\n                </Link>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nLanding.propTypes = {\n  security: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => ({\n  security: state.security\n});\nexport default connect(mapStateToProps)(Landing);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport classnames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { addGroupPost } from \"../../../actions/backlogActions\";\nclass AddGroupPost extends Component {\n  constructor(props) {\n    super(props);\n    const { id } = this.props.match.params;\n\n    this.state = {\n      title: \"\",\n      body: \"\",\n      acceptanceCriteria: \"\",\n      status: \"\",\n      dueDate: \"\",\n      groupIdentifier: id,\n      errors: {}\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    const newPost = {\n      title: this.state.title,\n      body: this.state.body,\n      acceptanceCriteria: this.state.acceptanceCriteria,\n      status: this.state.status,\n      dueDate: this.state.dueDate\n    };\n    this.props.addGroupPost(\n      this.state.groupIdentifier,\n      newPost,\n      this.props.history\n    );\n  }\n  render() {\n    const { id } = this.props.match.params;\n    const { errors } = this.state;\n    return (\n      <div className=\"add-PBI\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <Link to={`/groupBoard/${id}`} className=\"btn btn-light\">\n                Back to Group Board\n              </Link>\n              <h4 className=\"display-4 text-center\">Add Post</h4>\n              <p className=\"lead text-center\">Group Name + Group Code</p>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.title\n                    })}\n                    name=\"title\"\n                    placeholder=\"title \"\n                    value={this.state.title}\n                    onChange={this.onChange}\n                  />\n                  {errors.title && (\n                    <div className=\"invalid-feedback\">{errors.title}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.body\n                    })}\n                    name=\"body\"\n                    placeholder=\"Post \"\n                    value={this.state.body}\n                    onChange={this.onChange}\n                  />\n                  {errors.body && (\n                    <div className=\"invalid-feedback\">{errors.body}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <textarea\n                    className=\"form-control form-control-lg\"\n                    placeholder=\"Acceptance Criteria\"\n                    name=\"acceptanceCriteria\"\n                    value={this.state.acceptanceCriteria}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <h6>Due Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"datetime-local\"\n                    className=\"form-control form-control-lg\"\n                    name=\"dueDate\"\n                    value={this.state.dueDate}\n                    onChange={this.onChange}\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <select\n                    className=\"form-control form-control-lg\"\n                    name=\"status\"\n                    value={this.state.status}\n                    onChange={this.onChange}\n                  >\n                    <option value=\"\">Select Status</option>\n                    <option value=\"ACTIVE\">ACTIVE</option>\n                    <option value=\"IN_GAME\">IN GAME</option>\n                    <option value=\"CLOSED\">CLOSED</option>\n                  </select>\n                </div>\n\n                <input\n                  type=\"submit\"\n                  className=\"btn btn-primary btn-block mt-4\"\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nAddGroupPost.propTypes = {\n  AddGroupPost: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  errors: state.errors\n});\nexport default connect(\n  mapStateToProps,\n  { addGroupPost }\n)(AddGroupPost);\n","import axios from \"axios\";\nimport { GET_ERRORS, GET_BACKLOG, GET_GROUP_POST, GET_COMMENTS } from \"./types\";\n\nexport const addGroupPost = (\n  backlog_id,\n  group_post,\n  history\n) => async dispatch => {\n  try {\n    await axios.post(`/api/backlog/${backlog_id}`, group_post);\n    history.push(`/groupBoard/${backlog_id}`);\n    dispatch({\n      type: GET_ERRORS,\n      payload: {}\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\n\nexport const getBacklog = backlog_id => async dispatch => {\n  try {\n    const res = await axios.get(`/api/backlog/${backlog_id}`);\n    dispatch({\n      type: GET_BACKLOG,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\n\nexport const getGroupPost = (backlog_id, gp_id, history) => async dispatch => {\n  try {\n    const res = await axios.get(`/api/backlog/${backlog_id}/${gp_id}`);\n    dispatch({\n      type: GET_GROUP_POST,\n      payload: res.data\n    });\n  } catch (err) {\n    history.push(\"/dashboard\");\n  }\n};\nexport const updateGroupPost = (\n  backlog_id,\n  gp_id,\n  group_post,\n  history\n) => async dispatch => {\n  try {\n    await axios.patch(`/api/backlog/${backlog_id}/${gp_id}`, group_post);\n    history.push(`/groupBoard/${backlog_id}`);\n    dispatch({\n      type: GET_ERRORS,\n      payload: {}\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\nexport const getComments = (post_id, history) => async dispatch => {\n  try {\n    const res = await axios.get(`/api/backlog/com/${post_id}`);\n    dispatch({\n      type: GET_COMMENTS,\n      payload: res.data\n    });\n  } catch (err) {\n    history.push(\"/dashboard\");\n  }\n};\n\nexport const addComment = (post_id, comment, history) => async dispatch => {\n  try {\n    await axios.post(`/api/backlog/com/${post_id}`, comment);\n    history.goBack();\n    dispatch({\n      type: GET_ERRORS,\n      payload: {}\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nclass CommentItem extends Component {\n  render() {\n    const { comment } = this.props;\n    return (\n      <div className=\"container\">\n        <div className=\"card card-body bg-light mb-3\">\n          <div className=\"row\">\n            <div className=\"col-lg-6 col-md-4 col-8\">\n              <p>\n                Author:{\" \"}\n                <Link to={`/profile/${comment.author.username}`}>\n                  {comment.author.username}\n                </Link>{\" \"}\n                {comment.created_At}\n              </p>\n              <p>{comment.body}</p>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default CommentItem;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { getComments } from \"../../../../actions/backlogActions\";\nimport CommentItem from \"./CommentItem\";\nimport { Link } from \"react-router-dom\";\nclass Comment extends Component {\n  constructor() {\n    super();\n    this.state = {\n      errro: {}\n    };\n  }\n\n  componentDidMount() {\n    const { gp_id } = this.props.match.params;\n    console.log(gp_id);\n    this.props.getComments(gp_id);\n  }\n  render() {\n    const comments2 = this.props.comments;\n    console.log(this.props.comments);\n    const { gp_id } = this.props.match.params;\n\n    return (\n      <div className=\"projects\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <button\n              onClick={() => this.props.history.goBack()}\n              className=\"btn btn-light\"\n            >\n              Back to Group Board\n            </button>\n            <div>\n              <Link to={`/addComment/${gp_id}`} className=\"btn btn-danger\">\n                Add Comment\n              </Link>\n            </div>\n            <div className=\"col-md-12\">\n              <h1 className=\"display-4 text-center\">Comments</h1>\n              <br />\n              {comments2.map(comment => (\n                <CommentItem key={comment.id} comment={comment} />\n              ))}\n\n              <br />\n              <hr />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nComment.propTypes = {\n  comments: PropTypes.array.isRequired,\n  getComments: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  comments: state.backlog.comments\n});\nexport default connect(\n  mapStateToProps,\n  { getComments }\n)(Comment);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Comment from \"./Comment/Comment\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nclass GroupPost extends Component {\n  editPost() {\n    const { username } = this.props.group_post.author;\n    const { group_post } = this.props;\n    //console.log(this.props.security.user.username);\n    if (username === this.props.security.user.username) {\n      return (\n        <Link\n          to={`/updateGroupPost/${group_post.groupIdentifier}/${\n            group_post.groupSequence\n          }`}\n          className=\"btn btn-primary\"\n        >\n          Update\n        </Link>\n      );\n    }\n  }\n  render() {\n    const { group_post } = this.props;\n    return (\n      <div className=\"card mb-1 bg-light\">\n        <div className=\"card-header text-primary\">\n          Author:{\" \"}\n          <Link to={`/profile/${group_post.author.username}`}>\n            {group_post.author.username}\n          </Link>{\" \"}\n          {group_post.created_At}\n        </div>\n\n        <div className=\"card-body bg-light\">\n          <h5 className=\"card-title\">{group_post.title}</h5>\n\n          <p className=\"card-title\">{group_post.body}</p>\n          <p className=\"card-text text-truncate \">\n            <i className=\"fas fa-check\" /> {group_post.acceptanceCriteria}\n          </p>\n          <p className=\"card-text text-truncate \">time: {group_post.dueDate}</p>\n          {this.editPost()}\n\n          <Link to={`/getComments/${group_post.id}`} className=\"btn btn-dark\">\n            Comments\n          </Link>\n        </div>\n      </div>\n    );\n  }\n}\n\nGroupPost.propTypes = {\n  security: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  security: state.security\n});\nexport default connect(\n  mapStateToProps,\n  {}\n)(GroupPost);\n","import React, { Component } from \"react\";\nimport GroupPost from \"./GroupPost/GroupPost\";\n\nclass Backlog extends Component {\n  render() {\n    const { group_posts_prop } = this.props;\n    console.log(this.props);\n    const posts = group_posts_prop.map(group_post => (\n      <GroupPost key={group_post.id} group_post={group_post} />\n    ));\n    let todoItems = [];\n    let inProgressItems = [];\n    let doneItems = [];\n\n    for (let i = 0; i < posts.length; i++) {\n      console.log(posts[i]);\n\n      if (posts[i].props.group_post.status === \"ACTIVE\") {\n        todoItems.push(posts[i]);\n      }\n\n      if (posts[i].props.group_post.status === \"IN_GAME\") {\n        inProgressItems.push(posts[i]);\n      }\n\n      if (posts[i].props.group_post.status === \"CLOSED\") {\n        doneItems.push(posts[i]);\n      }\n    }\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-md-4\">\n            <div className=\"card text-center mb-2\">\n              <div className=\"card-header bg-secondary text-white\">\n                <h3>ACTIVE</h3>\n              </div>\n            </div>\n            {todoItems}\n          </div>\n          <div className=\"col-md-4\">\n            <div className=\"card text-center mb-2\">\n              <div className=\"card-header bg-primary text-white\">\n                <h3>In Game</h3>\n              </div>\n            </div>\n            {inProgressItems}\n          </div>\n          <div className=\"col-md-4\">\n            <div className=\"card text-center mb-2\">\n              <div className=\"card-header bg-success text-white\">\n                <h3>Closed</h3>\n              </div>\n            </div>\n            {doneItems}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Backlog;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Backlog from \"./Backlog\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { getBacklog } from \"../../actions/backlogActions\";\nclass GroupBoard extends Component {\n  constructor() {\n    super();\n    this.state = {\n      errors: {}\n    };\n  }\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n  componentDidMount() {\n    const { id } = this.props.match.params;\n    this.props.getBacklog(id);\n  }\n  render() {\n    const { id } = this.props.match.params;\n    const { group_posts } = this.props.backlog;\n    const { errors } = this.state;\n    let BoardContent;\n\n    const boardAlgorithm = (errors, group_posts) => {\n      if (group_posts.length < 1) {\n        if (errors.groupNotFound) {\n          return (\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\n              {errors.groupNotFound}\n            </div>\n          );\n        } else {\n          return (\n            <div className=\"alert alert-info text-center\" role=\"alert\">\n              No Posts on this board\n            </div>\n          );\n        }\n      } else {\n        return <Backlog group_posts_prop={group_posts} />;\n      }\n    };\n\n    BoardContent = boardAlgorithm(errors, group_posts);\n    return (\n      <div className=\"container\">\n        <Link to={`/addGroupPost/${id}`} className=\"btn btn-primary mb-3\">\n          <i className=\"fas fa-plus-circle\"> Create Post</i>\n        </Link>\n        <br />\n        <hr />\n        {BoardContent}\n      </div>\n    );\n  }\n}\n\nGroupBoard.propTypes = {\n  backlog: PropTypes.object.isRequired,\n  getBacklog: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  backlog: state.backlog,\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { getBacklog }\n)(GroupBoard);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\nimport { getGroupPost, updateGroupPost } from \"../../../actions/backlogActions\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nclass UpdateGroupPost extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      id: \"\",\n      title: \"\",\n      groupSequence: \"\",\n      body: \"\",\n      acceptanceCriteria: \"\",\n      status: \"\",\n      dueDate: \"\",\n      groupIdentifier: \"\",\n      create_At: \"\",\n      errors: {}\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n  componentDidMount() {\n    const { backlog_id, gp_id } = this.props.match.params;\n    this.props.getGroupPost(backlog_id, gp_id, this.props.history);\n  }\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n    const {\n      id,\n      title,\n      groupSequence,\n      body,\n      acceptanceCriteria,\n      status,\n      dueDate,\n      groupIdentifier,\n      create_At\n    } = nextProps.group_post;\n\n    this.setState({\n      id,\n      title,\n      groupSequence,\n      body,\n      acceptanceCriteria,\n      status,\n      dueDate,\n      groupIdentifier,\n      create_At\n    });\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    const UpdateGroupPost = {\n      id: this.state.id,\n      title: this.state.title,\n      groupSequence: this.state.groupSequence,\n      body: this.state.body,\n      acceptanceCriteria: this.state.acceptanceCriteria,\n      status: this.state.status,\n      dueDate: this.state.dueDate,\n      groupIdentifier: this.state.groupIdentifier,\n      create_A: this.state.create_At\n    };\n    this.props.updateGroupPost(\n      this.state.groupIdentifier,\n      this.state.groupSequence,\n      UpdateGroupPost,\n      this.props.history\n    );\n  }\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className=\"add-PBI\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <Link\n                to={`/groupBoard/${this.state.groupIdentifier}`}\n                className=\"btn btn-light\"\n              >\n                Back to Group Board\n              </Link>\n              <h4 className=\"display-4 text-center\">Update Post</h4>\n              <p className=\"lead text-center\">\n                Group Name: {this.state.groupIdentifier} | Post ID:{\" \"}\n                {this.state.groupSequence}{\" \"}\n              </p>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.body\n                    })}\n                    name=\"title\"\n                    placeholder=\"Say something\"\n                    value={this.state.title}\n                    onChange={this.onChange}\n                  />\n                  {errors.title && (\n                    <div className=\"invalid-feedback\">{errors.title}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.body\n                    })}\n                    name=\"body\"\n                    placeholder=\"Say something\"\n                    value={this.state.body}\n                    onChange={this.onChange}\n                  />\n                  {errors.body && (\n                    <div className=\"invalid-feedback\">{errors.body}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    className=\"form-control form-control-lg\"\n                    placeholder=\"Acceptance Criteria\"\n                    name=\"acceptanceCriteria\"\n                    value={this.state.acceptanceCriteria}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <h6>Due Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"datetime-local\"\n                    className=\"form-control form-control-lg\"\n                    name=\"dueDate\"\n                    value={this.state.dueDate}\n                    onChange={this.onChange}\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <select\n                    className=\"form-control form-control-lg\"\n                    name=\"status\"\n                    value={this.state.status}\n                    onChange={this.onChange}\n                  >\n                    <option value=\"\">Select Status</option>\n                    <option value=\"ACTIVE\">ACTIVE</option>\n                    <option value=\"IN_GAME\">IN GAME</option>\n                    <option value=\"CLOSED\">CLOSED</option>\n                  </select>\n                </div>\n\n                <input\n                  type=\"submit\"\n                  className=\"btn btn-primary btn-block mt-4\"\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nUpdateGroupPost.propTypes = {\n  getGroupPost: PropTypes.func.isRequired,\n  group_post: PropTypes.object.isRequired,\n  updateGroupPost: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  group_post: state.backlog.group_post,\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { getGroupPost, updateGroupPost }\n)(UpdateGroupPost);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport classnames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { addComment } from \"../../../../actions/backlogActions\";\nclass AddComment extends Component {\n  constructor(props) {\n    super(props);\n    console.log(this.props);\n    this.state = {\n      body: \"\",\n      errors: {}\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const { gp_id } = this.props.match.params;\n\n    const newComment = {\n      body: this.state.body\n    };\n    this.props.addComment(gp_id, newComment, this.props.history);\n  }\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className=\"add-PBI\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <Link to={`/dashboard`} className=\"btn btn-light\">\n                Back to Groups\n              </Link>\n              <h4 className=\"display-4 text-center\">Add Comment</h4>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.body\n                    })}\n                    name=\"body\"\n                    placeholder=\"Comment... \"\n                    value={this.state.body}\n                    onChange={this.onChange}\n                  />\n                  {errors.body && (\n                    <div className=\"invalid-feedback\">{errors.body}</div>\n                  )}\n                </div>\n                <input\n                  type=\"submit\"\n                  className=\"btn btn-primary btn-block mt-4\"\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nAddComment.propTypes = {\n  AddComment: PropTypes.func.isRequired,\n  errors: PropTypes.string.isRequired\n};\n\nconst mapStateToProps = state => ({\n  errors: state.errors\n});\nexport default connect(\n  mapStateToProps,\n  { addComment }\n)(AddComment);\n","import axios from \"axios\";\nimport { GET_ERRORS, GET_PROFILE } from \"./types\";\n\nexport const getProfile = (username, history) => async dispatch => {\n  const res = await axios.get(`/api/users/profile/${username}`);\n  dispatch({\n    type: GET_PROFILE,\n    payload: res.data\n  });\n};\n\nexport const updateProfile = (username, profil, history) => async dispatch => {\n  try {\n    await axios.post(`/api/users/profile/edit/${username}`, profil);\n    history.push(`/profile/${username}`);\n    dispatch({\n      type: GET_ERRORS,\n      payload: {}\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\n","import axios from \"axios\";\nimport { GET_FRIENDS, GET_REC_INV, GET_SENT_INV, GET_ERRORS } from \"./types\";\n\nexport const getFriends = () => async dispatch => {\n  const res = await axios.get(`/api/users/friends`);\n  dispatch({\n    type: GET_FRIENDS,\n    payload: res.data\n  });\n};\nexport const getSentInv = () => async dispatch => {\n  const res = await axios.get(`/api/users/invite/view/sentInv`);\n  dispatch({\n    type: GET_SENT_INV,\n    payload: res.data\n  });\n};\nexport const getRecInv = () => async dispatch => {\n  const res = await axios.get(`/api/users/invite/view/recInv`);\n  dispatch({\n    type: GET_REC_INV,\n    payload: res.data\n  });\n};\n\nexport const inviteFriend = (username, history) => async dispatch => {\n  try {\n    await axios.post(`/api/users/invite/${username}`);\n    history.push(`/profile/friends`);\n    dispatch({\n      type: GET_ERRORS,\n      payload: {}\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\n\nexport const acceptFriend = (username, history) => async dispatch => {\n  try {\n    await axios.post(`/api/users/invite/accept/${username}`);\n    history.push(`/profile/friends`);\n    dispatch({\n      type: GET_ERRORS,\n      payload: {}\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\nexport const declineFriend = (username, history) => async dispatch => {\n  try {\n    await axios.post(`/api/users/invite/decline/${username}`);\n    history.push(`/profile/friends`);\n    dispatch({\n      type: GET_ERRORS,\n      payload: {}\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getProfile } from \"../../actions/profileActions\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport {\n  inviteFriend,\n  getFriends,\n  getSentInv,\n  getRecInv\n} from \"../../actions/friendsActions\";\n\nclass Profil extends Component {\n  constructor() {\n    super();\n    this.state = {\n      errors: {}\n    };\n  }\n  onSendInv = id => {\n    this.props.inviteFriend(id);\n    window.location.reload();\n  };\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n  componentDidMount() {\n    const { username } = this.props.match.params;\n    this.props.getProfile(username);\n    this.props.getFriends(this.props.security.user.username);\n    this.props.getSentInv(this.props.security.user.username);\n    this.props.getRecInv(this.props.security.user.username);\n  }\n  editProfilButton() {\n    const { username } = this.props.match.params;\n    const { friends } = this.props.friends;\n    console.log(\"1\");\n    console.log(this.props.friends.sentInvs);\n    {\n      if (username === this.props.security.user.username) {\n        return (\n          <div>\n            <Link\n              to={`/profile/edit/${this.props.security.user.username}`}\n              className=\"btn btn-lg btn-info\"\n            >\n              Edit profil\n            </Link>\n          </div>\n        );\n      } else if (friends.filter(e => e.username === username).length > 0) {\n        return <div className=\"btn btn-lg btn-success\">Your friend</div>;\n      } else if (\n        friends.filter(e => e.username === username).length === 0 &&\n        this.props.friends.sentInvs.filter(e => e.username === username)\n          .length > 0\n      ) {\n        return <div className=\"btn btn-lg btn-info\">Invite was sended</div>;\n      } else if (\n        friends.filter(e => e.username === username).length === 0 &&\n        this.props.friends.recInvs.filter(e => e.username === username).length >\n          0\n      ) {\n        return <div className=\"btn btn-lg btn-info\">You are invited</div>;\n      } else if (friends.filter(e => e.username === username).length === 0) {\n        return (\n          <div>\n            <div\n              className=\"btn btn-lg btn-info\"\n              onClick={this.onSendInv.bind(this, username)}\n            >\n              Add friend\n            </div>\n          </div>\n        );\n      }\n    }\n  }\n\n  render() {\n    const { profil } = this.props.profil;\n    return (\n      <div className=\"container col-sm-12 col-md-10 col-lg-8 col-xl-6\">\n        <div className=\"row col-sm-12 text-center bg-light\">\n          <div className=\"col-sm-4 pd-bot\">\n            <img src={profil.logo} className=\"rounded-circle profil pd-bot\" />\n\n            <br />\n            {this.editProfilButton()}\n            <br />\n          </div>\n          <div className=\"col-sm-8 text-center pd-top\">\n            <h2>{profil.username}</h2>\n            <br />\n            <div className=\"text-sm-left \">\n              <p>\n                <strong>About: </strong>\n                {profil.about}\n              </p>\n              <p>\n                <strong>Hobbies: </strong> {profil.hobbies}\n              </p>\n              <p>\n                <strong>Games: </strong> {profil.games}\n              </p>\n              <p>\n                <strong>Age: </strong> {profil.age}\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nProfil.propTypes = {\n  profil: PropTypes.object.isRequired,\n  getProfil: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n  security: PropTypes.object.isRequired,\n  inviteFriend: PropTypes.func.isRequired,\n  friends: PropTypes.object.isRequired,\n  sentInv: PropTypes.object.isRequired,\n  recInv: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => ({\n  profil: state.profil,\n  errors: state.errors,\n  security: state.security,\n  friends: state.friends\n});\n\nexport default connect(\n  mapStateToProps,\n  { getProfile, inviteFriend, getFriends, getSentInv, getRecInv }\n)(Profil);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\nimport { getProfile, updateProfile } from \"../../actions/profileActions\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nclass UpdateProfil extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      logo: \"\",\n      about: \"\",\n      hobbies: \"\",\n      games: \"\",\n      age: \"\"\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n  componentDidMount() {\n    const { username } = this.props.match.params;\n    console.log(username);\n    this.props.getProfile(username);\n  }\n  componentWillReceiveProps(nextProps) {\n    console.log(nextProps);\n    const { logo, about, hobbies, games, age } = nextProps.profil.profil;\n\n    this.setState({\n      logo,\n      about,\n      hobbies,\n      games,\n      age\n    });\n    console.log(\"xd\");\n    console.log(this.state);\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const { username } = this.props.match.params;\n    const updateProfil = {\n      logo: this.state.logo,\n      about: this.state.about,\n      hobbies: this.state.hobbies,\n      games: this.state.games,\n      age: this.state.age\n    };\n    this.props.updateProfile(username, updateProfil, this.props.history);\n  }\n  render() {\n    const { errors } = this.state;\n    const { username } = this.props.match.params;\n    console.log(this.state);\n    console.log(this.props);\n    return (\n      <div className=\"add-PBI\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <Link to={`/profile/${username}`} className=\"btn btn-light\">\n                Back to Profil\n              </Link>\n              <h4 className=\"display-4 text-center\">Update Profil</h4>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className=\"form-control form-control-lg\"\n                    name=\"logo\"\n                    value={this.state.logo}\n                    onChange={this.onChange}\n                    placeholder=\"link to photo\"\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className=\"form-control form-control-lg\"\n                    name=\"about\"\n                    value={this.state.about}\n                    onChange={this.onChange}\n                    placeholder=\"about\"\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className=\"form-control form-control-lg\"\n                    name=\"hobbies\"\n                    value={this.state.hobbies}\n                    onChange={this.onChange}\n                    placeholder=\"hobby\"\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className=\"form-control form-control-lg\"\n                    name=\"games\"\n                    value={this.state.games}\n                    onChange={this.onChange}\n                    placeholder=\"your games\"\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className=\"form-control form-control-lg\"\n                    name=\"age\"\n                    value={this.state.age}\n                    onChange={this.onChange}\n                    placeholder=\"age\"\n                  />\n                </div>\n                <input\n                  type=\"submit\"\n                  className=\"btn btn-primary btn-block mt-4\"\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nUpdateProfil.propTypes = {\n  getProfile: PropTypes.func.isRequired,\n  profil: PropTypes.object.isRequired,\n  updateProfile: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profil: state.profil\n});\n\nexport default connect(\n  mapStateToProps,\n  { getProfile, updateProfile }\n)(UpdateProfil);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nclass FriendItem extends Component {\n  render() {\n    const { friend } = this.props;\n    return (\n      <div className=\"card mb-1 bg-light\">\n        <div className=\"card-header text-primary\">\n          <Link to={`/profile/${friend.username}`}>{friend.username}</Link>{\" \"}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default FriendItem;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { declineFriend, acceptFriend } from \"../../actions/friendsActions\";\nclass RecInvItem extends Component {\n  onDeleteClick = id => {\n    this.props.declineFriend(id);\n    window.location.reload();\n  };\n  onAcceptClick = id => {\n    this.props.acceptFriend(id);\n    window.location.reload();\n  };\n  render() {\n    const { recInv } = this.props;\n    console.log(\"1111\");\n    return (\n      <div className=\"card mb-1 bg-light\">\n        <div className=\"card-header text-primary\">\n          <Link to={`/profile/${recInv.username}`}>{recInv.username}</Link>{\" \"}\n        </div>\n        <Link>\n          <li\n            className=\"list-group-item bg-danger\"\n            onClick={this.onDeleteClick.bind(this, recInv.username)}\n          >\n            <i className=\"fa fa-user-minus text-warning\"> Decline</i>\n          </li>\n        </Link>\n        <Link>\n          <li\n            className=\"list-group-item bg-success\"\n            onClick={this.onAcceptClick.bind(this, recInv.username)}\n          >\n            <i className=\"fa fa-user-plus text-dark\"> Accept</i>\n          </li>\n        </Link>\n      </div>\n    );\n  }\n}\nRecInvItem.propTypes = {\n  declineFriend: PropTypes.func.isRequired,\n  acceptFriend: PropTypes.func.isRequired\n};\n\nexport default connect(\n  null,\n  { acceptFriend, declineFriend }\n)(RecInvItem);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { declineFriend, acceptFriend } from \"../../actions/friendsActions\";\nclass SentInvItem extends Component {\n  render() {\n    const { sentInv } = this.props;\n    return (\n      <div className=\"card mb-1 bg-light\">\n        <div className=\"card-header text-primary\">\n          <Link to={`/profile/${sentInv.username}`}>{sentInv.username}</Link>{\" \"}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SentInvItem;\n","import React, { Component } from \"react\";\nimport {\n  getFriends,\n  getRecInv,\n  getSentInv,\n  acceptFriend,\n  inviteFriend,\n  declineFriend\n} from \"../../actions/friendsActions\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport FriendItem from \"./FriendItem\";\nimport RecInvItem from \"./RecInvItem\";\nimport SentInvItem from \"./SentInvItem\";\nclass Friends extends Component {\n  componentDidMount() {\n    this.props.getFriends();\n    this.props.getSentInv();\n    this.props.getRecInv();\n  }\n  sleep(milliseconds) {\n    var start = new Date().getTime();\n    for (var i = 0; i < 1e7; i++) {\n      if (new Date().getTime() - start > milliseconds) {\n        break;\n      }\n    }\n  }\n  checkFriends() {\n    const friends = this.props.friends.friends;\n    {\n      if (friends) {\n        {\n          return friends.map(friend => (\n            <FriendItem key={friend.id} friend={friend} />\n          ));\n        }\n      }\n    }\n  }\n  checkSentInv() {\n    const sentInvs = this.props.friends.sentInvs;\n    {\n      if (sentInvs) {\n        {\n          return sentInvs.map(sentInv => (\n            <SentInvItem key={sentInv.id} sentInv={sentInv} />\n          ));\n        }\n      }\n    }\n  }\n  checkRecInv() {\n    const recInvs = this.props.friends.recInvs;\n    {\n      if (recInvs) {\n        {\n          return recInvs.map(recInv => (\n            <RecInvItem key={recInv.id} recInv={recInv} />\n          ));\n        }\n      }\n    }\n  }\n  render() {\n    const friends = this.props.friends.friends;\n    const recInvs = this.props.friends.recInvs;\n    const sentInvs = this.props.friends.sentInvs;\n    console.log(\"fr\");\n    console.log(friends);\n    console.log(\"fr2\");\n    console.log(recInvs);\n    console.log(\"fr3\");\n    console.log(sentInvs);\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-md-4\">\n            <div className=\"card text-center mb-2\">\n              <div className=\"card-header bg-secondary text-white\">\n                <h3>Friends</h3>\n              </div>\n            </div>{\" \"}\n            {this.checkFriends()}\n          </div>\n          <div className=\"col-md-4\">\n            <div className=\"card text-center mb-2\">\n              <div className=\"card-header bg-primary text-white\">\n                <h3>Received invites</h3>\n              </div>\n            </div>\n            {this.checkRecInv()}\n          </div>\n          <div className=\"col-md-4\">\n            <div className=\"card text-center mb-2\">\n              <div className=\"card-header bg-success text-white\">\n                <h3>Sended invites</h3>\n              </div>\n            </div>\n            {this.checkSentInv()}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nFriends.propTypes = {\n  friends: PropTypes.object.isRequired,\n  sentInv: PropTypes.object.isRequired,\n  recInv: PropTypes.object.isRequired,\n  acceptFriend: PropTypes.func.isRequired,\n  declineFriend: PropTypes.func.isRequired\n};\nconst mapStateToProps = state => ({\n  friends: state.friends,\n  sentInv: state.sentInvs,\n  recInv: state.recInvs\n});\nexport default connect(\n  mapStateToProps,\n  {\n    inviteFriend,\n    declineFriend,\n    acceptFriend,\n    getFriends,\n    getRecInv,\n    getSentInv\n  }\n)(Friends);\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Dashboard from \"./components/Dashboard\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Header from \"./components/Layout/Header\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport AddGroup from \"./components/Group/AddGroup\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport UpdateGroup from \"./components/Group/UpdateGroup\";\nimport Register from \"./components/UserManagement/Register\";\nimport Login from \"./components/UserManagement/Login\";\nimport jwt_decode from \"jwt-decode\";\nimport setJWTToken from \"./securityUtils/setJWTToken\";\nimport { SET_CURRENT_USER } from \"./actions/types\";\nimport { logout } from \"./actions/securityActions\";\nimport SecuredRoute from \"./securityUtils/SecureRoute\";\nimport Landing from \"./components/Layout/Landing\";\nimport AddGroupPost from \"./components/GroupBoard/GroupPost/AddGroupPost\";\nimport GroupBoard from \"./components/GroupBoard/GroupBoard\";\nimport UpdateGroupPost from \"./components/GroupBoard/GroupPost/UpdateGroupPost\";\nimport AddComment from \"./components/GroupBoard/GroupPost/Comment/AddComment\";\nimport Comment from \"./components/GroupBoard/GroupPost/Comment/Comment\";\nimport profil from \"./components/Profil/profil\";\nimport updateProfil from \"./components/Profil/updateProfil\";\nimport Friends from \"./components/Friends/Friends\";\n\nconst jwtToken = localStorage.jwtToken;\n\nif (jwtToken) {\n  setJWTToken(jwtToken);\n  const decoded_jwtToken = jwt_decode(jwtToken);\n  store.dispatch({\n    type: SET_CURRENT_USER,\n    payload: decoded_jwtToken\n  });\n\n  const currentTime = Date.now() / 1000;\n  if (decoded_jwtToken.exp < currentTime) {\n    store.dispatch(logout());\n    window.location.href = \"/\";\n  }\n}\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <div className=\"App\">\n            <Header />\n            <Route exact path=\"/\" component={Landing} />\n            <Route exact path=\"/register\" component={Register} />\n            <Route exact path=\"/login\" component={Login} />\n\n            <Switch>\n              <SecuredRoute exact path=\"/Dashboard\" component={Dashboard} />\n              <SecuredRoute exact path=\"/addGroup\" component={AddGroup} />\n              <SecuredRoute\n                exact\n                path=\"/updateGroup/:id\"\n                component={UpdateGroup}\n              />\n              <SecuredRoute\n                exact\n                path=\"/GroupBoard/:id\"\n                component={GroupBoard}\n              />\n              <SecuredRoute\n                exact\n                path=\"/addGroupPost/:id\"\n                component={AddGroupPost}\n              />\n              <Route\n                exact\n                path=\"/updateGroupPost/:backlog_id/:gp_id\"\n                component={UpdateGroupPost}\n              />\n              <SecuredRoute\n                exact\n                path=\"/addComment/:gp_id\"\n                component={AddComment}\n              />\n              <SecuredRoute\n                exact\n                path=\"/getComments/:gp_id\"\n                component={Comment}\n              />\n              <SecuredRoute\n                exact\n                path=\"/profile/:username\"\n                component={profil}\n              />\n              <SecuredRoute\n                exact\n                path=\"/profile/edit/:username\"\n                component={updateProfil}\n              />\n              <SecuredRoute exact path=\"/friends\" component={Friends} />\n            </Switch>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}